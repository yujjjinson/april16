package syj;

import java.awt.Button;
import java.awt.Checkbox;
import java.awt.CheckboxGroup;
import java.awt.Choice;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.GridLayout;
import java.awt.Label;
import java.awt.Panel;
import java.awt.TextField;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
//윈도우의 x를 누를 때 발생하는 이벤트 WindowEvent
//WindowEvent를 처리하는 리스너는 Windowlistener
//윈도우에 WindowListener를 설치한다. 즉, windowListener를 상속한다.
//그런데, 모든 리스너는 인터페이스이다. 인터페이스 상속은 implements
//windowListener설치를 한 후 , 리스너가 가지고 있는 콜백메서드를 오버라이드(바꾼다.)
//무조건 문법이기떄문에
//클래스안에 커서를 위치한후 이클립스의 source-override-확인-ok
//윈도우 엑스를 눌렀을때 리스너가 자동으로 호출하는 메서드 이름은 windowclosing()이다. 따라서
//윈도우클로징()안에 프로그램 종료처리를 한다
//윈도우에 리스너를 붙인다. 에드윈도우리스너(?)메서드로 붙인다
//?에 무엇을 
public class Emp extends Frame implements WindowListener{
	@Override
	public void windowActivated(WindowEvent e) {}


	@Override
	public void windowClosed(WindowEvent e) {}


	@Override
	public void windowClosing(WindowEvent e) {
	System.exit(0);
	}
	@Override
	public void windowDeactivated(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void windowDeiconified(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void windowIconified(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void windowOpened(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}
	Panel[] panels; Label[] labels; TextField[] inputs;
	Choice[] choices; Checkbox[] checks; Button[] btns;
	CheckboxGroup group; 
	String[] label_name = {"사번","이름","부서명","업무","월급","성별","취미"};
	String[] dept = {"개발부","영업부","관리부","홍보부","마케팅부"};
	String[] job_id = {"IT","SALES","MAN","AD","MARKET","SUPPORTS","유진짱"};
	String[] gender_hobby = {"남","여","게임","여행","독서","영화","운동","노래"};
	String[] btn_tittle = {" 등 록 "," 지우기 "};//버튼의 제목
	
	void doIt() {
		panels = new Panel[8];//배열의 길이를 8로 선언
		for(int i=0; i<panels.length; i++) {
			panels[i] = new Panel(); // 패널생성
			panels[i].setLayout(new FlowLayout());//배치관리자 설정
		
		}
		labels = new Label[7]; //길이 7의 배열 생성
		for(int i=0; i<labels.length; i++) {
			labels[i] = new Label(label_name[i]);
			panels[i].add(labels[i]);
//			panels[0].add(labels[0]);panels[1].add(labels[1]);
//			panels[2].add(labels[2]);panels[3].add(labels[3]);
//			panels[4].add(labels[4]);panels[5].add(labels[5]);
//			panels[6].add(labels[6]);//아래 패널 반복문을 통해 이 네줄은 무의미해졌다. 
			
			
		}
		inputs = new TextField[3];
		for(int i=0;i<inputs.length; i++) {
			inputs[i] = new TextField(20);//길이 20의 텍스트필드 생성
		}
		panels[0].add(inputs[0]);panels[1].add(inputs[1]);
		panels[4].add(inputs[2]);
		choices = new Choice[2];//길이 2의 배열생성
		for(int i=0; i<choices.length; i++) {
			choices[i] = new Choice();
			switch(i) {
			case 0://부서명을 넣는다
				for(int k=0; k<dept.length; k++) {
					choices[0].add(dept[k]);//부서명을넣는다
				}
				break; // 종료
				
			case 1://업무명을넣는다
				for(int k=0; k<job_id.length;k++) {
					choices[1].add(job_id[k]);//업무명을 넣는다
					
				}
				break;//종료
			}
		}
		panels[2].add(choices[0]); panels[3].add(choices[1]);
		checks = new Checkbox[8];//길이 8의 배열
		group = new CheckboxGroup();//라디오버튼용 체크박스그룹
		for(int i=0; i<checks.length; i++) {
			if(i>=2) {//i가 2와 같거나 크면 취미 
				checks[i] = new Checkbox(gender_hobby[i]);	
			}else {//i가 0혹은 1이면 성별
				checks[i] = new Checkbox(gender_hobby[i],group,false);
			}
						
			}
		panels[5].add(checks[0]);panels[5].add(checks[1]);
		panels[6].add(checks[2]);panels[6].add(checks[3]);
		panels[6].add(checks[4]);panels[6].add(checks[5]);
		panels[6].add(checks[6]);panels[6].add(checks[7]);
		
		btns = new Button[2];//길이
		for(int i=0; i<btns.length;i++) {
			
			btns[i] = new Button(btn_tittle[i]);//버튼생성
		}
		panels[7].add(btns[0]);panels[7].add(btns[1]);
		}
	
	
	public Emp (String str) {
		super(str);
		this.setLayout(new GridLayout(8,1));
		doIt();
		for(int i=0; i<8; i++) {
			this.add(panels[i]);
			
		}
		
//		this.add(panels[0]);this.add(panels[1]);
//		this.add(panels[2]);this.add(panels[3]);
//		this.add(panels[4]);this.add(panels[5]);
//		this.add(panels[6]);this.add(panels[7]);//이 또한 무의미해짐
		this.setBackground(Color.PINK);
		this.addWindowListener(this);
		this.setSize(400,600);
		this.setVisible(true);
	
		
	
	}
	public static void main(String[] args) {
	new Emp("사원관리 시스템");

	}

}
