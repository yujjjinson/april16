package syj;

import java.awt.Button;
import java.awt.Choice;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.Label;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
//윈도우 종료 처리
//1. 윈도우의 x를 눌렀을 때 발생하는 이벤트를 찾는다.
//		-> WindowEvent
//2. 해당 이벤트를 처리하는 리스너를 찾는다.(이벤트이름 + Listener)
//		-> WindowListener
//3. 해당 리스너를 클래스에 넣는다.(어떻게? 상속한다.)
//		-> 모든 리스너는 인터페이스이다. 따라서, implements로 상속한다.
//4. 리스너가 가지고 있는 추상 메서드를 반드시 오버라이딩한다.
//5. 콜백메서드를 우리가 원하는 방식으로 처리되도록 프로그램한다.
//		-> 윈도우의 x를 눌렀을 때 자동으로 호출되는 콜백메서드 이름은?
//			-> windowClosing()이다.
//			-> 따라서, WindowClosing()메서드 안에 프로그램 종료처리를 한다.
//6. 윈도우에 리스너를 붙인다.

public class Study4 extends Frame 
	implements WindowListener, ActionListener,ItemListener{
	@Override
	public void itemStateChanged(ItemEvent arg0) {
		System.out.println("Honey~ i Love you");
		// 년도를 눌러도 여기로 온다.
		// 월을 눌러도 여기로 온다.
		//일을 눌러도 여기로 온다. 
		if(arg0.getSource()==year) {//년도를 누른경우
			System.out.println("Put the what you want year");
		}else if(arg0.getSource()==month) {//월을 누른 경우
			//선택한 월을 찾아서, 월에 따라 일을 date에 넣는다. 
			System.out.println(month.getSelectedItem());
			//getSelectedItem()메서드는 선택한 초이스의 데이터를 찾는다. 
			String m = month.getSelectedItem();
			int month_int = Integer.parseInt(m);//문자열을 int로 변환
			//date에 기존에 들어가 있는 데이터를 싹 지운다.
			date.removeAll();//들어가있는 데이터를 지우는 메서드 
			switch(month_int) {
			case 2 : //date에 28일을 채운다
				for (int i=1; i<=28; i++) {
					date.add(i+"");
				}
				break;
			case 4 : 
			case 6 : 
			case 9 :
			case 11: //date에 30일을 채운다
				for(int i=1; i<=30; i ++) {
					date.add(i+"");
				}
					break;
			default: //date에 31일을 채운다
				for(int i=1; i<=31; i++) {
					date.add(i+"");
					
				}
			}
		}else {//일을 누른경우
			String y = year.getSelectedItem();
			String m = month.getSelectedItem();
			String d = date.getSelectedItem();
			String str = "UR B-day is "+y+"/"+"/"+d+".";
			result.setText(str);
		//System.out.println("Put the what you want date");
		}
		//이 메서드에서 할일 : 월에 따라서 날짜를 date에 넣는다. 
	}
	@Override
	public void actionPerformed(ActionEvent arg0) {
		// 버튼을 눌렀을 때, 자동으로 호출되는 메서드
		//자동으로 호출되는 메서드를 -> 콜백(Callback) 메서드
		label.setText(" Darling ~ ");
		//레이블에 문자열을 출력하는 메서드
	}
	@Override
	public void windowActivated(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void windowClosed(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void windowClosing(WindowEvent arg0) {
		System.exit(0);//프로그램 강제 종료
		
	}
	@Override
	public void windowDeactivated(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void windowDeiconified(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void windowIconified(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void windowOpened(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	Button btn; Label label,result;Choice year,month,date;
	void doChoice(){
		for(int i=2019;i>=1930;i--) {//2019년부터 1930년까지
			year.add(i+"");
		}
		for(int i=1;i<=12;i++) {//1부터 12까지 
			month.add(i+"");
		}
		for(int i=1;i<=31;i++) {//1부터 
			date.add(i+"");
		}
		
		year.addItemListener(this);
		month.addItemListener(this);
		date.addItemListener(this);
	}
	
	public Study4(String str) {
		
		super(str);
		year = new Choice(); month = new Choice(); date =  new Choice();date.add("           ");
		doChoice(); 
		result = new Label("선택한 생년월일                         ");
		
		//초이스를 채우는 작업은 별도의 메서드에서 한다. 
		this.setLayout(new FlowLayout());//배치관리자 설정
		label = new Label("                                ");
		btn = new Button("Hug me~!!!!!");
		btn.setForeground(Color.RED);
		btn.addActionListener(this);
		this.add(btn);	this.add(label); this.add(result);
		this.add(year); this.add(month); this.add(date);
		this.addWindowListener(this);//윈도우 리스너를 윈도우에 붙인다.
		//메서드의 괄호안에 무엇을 적어야 하나?
		//	-> 리스너가 있는 인스턴스 
		//	-> 현재 클래스가 리스너를 상속했으므로, 현재 클래스가 리스너다.
		//	-> 따라서, this를 넣는다.
		this.setSize(1000,100);
		this.setVisible(true);
	}
	public static void main(String[] args) {
		new Study4("윈도우 이벤트");
	}
}








